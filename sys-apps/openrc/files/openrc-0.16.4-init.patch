--- init.d/devfs.in.dist
+++ init.d/devfs.in
@@ -13,7 +13,7 @@
 
 mount_dev()
 {
-	local action=--mount devfstype msg=Mounting
+	local action="--mount" devfstype msg="Mounting"
 	# Some devices require exec, Bug #92921
 	local mountopts="exec,nosuid,mode=0755"
 	if yesno ${skip_mount_dev:-no} ; then
@@ -21,9 +21,9 @@
 		return 0
 	fi
 	if mountinfo -q /dev; then
-		action=--remount
+		action="--remount"
 		mountopts="remount,$mountopts"
-		msg=Remounting
+		msg="Remounting"
 	fi
 	if fstabinfo -q /dev; then
 		ebegin "$msg /dev according to @SYSCONFDIR@/fstab"
@@ -31,16 +31,17 @@
 		eend $?
 		return 0
 	fi
+
 	if grep -q devtmpfs /proc/filesystems; then
 		devfstype=devtmpfs
-		mountopts="$mountopts,size=10M"
+		mountopts+=",size=5M"
 	elif grep -q tmpfs /proc/filesystems; then
 		devfstype=tmpfs
-		mountopts="$mountopts,size=10M"
+		mountopts+=",size=5M"
 	fi
 	if [ -n "$devfstype" ]; then
 		ebegin "$msg $devfstype on /dev"
-		mount -n -t $devfstype -o $mountopts dev /dev
+		mount -n -t $devfstype dev /dev -o $mountopts
 		eend $?
 	else
 		ewarn "This kernel does not have devtmpfs or tmpfs support, and there"
--- init.d/bootmisc.in.dist
+++ init.d/bootmisc.in
@@ -29,7 +29,7 @@
 		# Faster than raw find
 		if ! rm -rf -- [!ajlq\.]* 2>/dev/null ; then
 			# Blah, too many files
-			find . -maxdepth 1 -name '[!ajlq\.]*' -exec rm -rf -- {} +
+			find . -maxdepth 1 ! -name '[ajlq\.]*' -exec rm -rf -- {} +
 		fi
 
 		# pam_mktemp creates a .private directory within which
@@ -99,20 +99,20 @@
 {
 	src="$1"
 	dst="$2"
- 	if [ -L $src -a "$(readlink -f $src)" != $dst ]; then
- 		ewarn "$src does not point to $dst."
- 		ewarn "Setting $src to point to $dst."
- 		rm $src
- 	elif [ ! -L $src -a -d $src ]; then
- 		ebegin "Migrating $src to $dst"
- 		cp -a $src/* $dst/
- 		rm -rf $src
- 		eend $?
- 	fi
- 	# If $src doesn't exist at all, just run this
- 	if [ ! -e $src ]; then
- 		ln -s $dst $src
- 	fi
+	if [ -L $src -a "$(readlink -f $src)" != $dst ]; then
+		ewarn "$src does not point to $dst."
+		ewarn "Setting $src to point to $dst."
+		rm $src
+	elif [ ! -L $src -a -d $src ]; then
+		ebegin "Migrating $src to $dst"
+		cp -a $src/* $dst/
+		rm -rf $src
+		eend $?
+	fi
+	# If $src doesn't exist at all, just run this
+	if [ ! -e $src ]; then
+		ln -s $dst $src
+	fi
 }
 
 clean_run()
