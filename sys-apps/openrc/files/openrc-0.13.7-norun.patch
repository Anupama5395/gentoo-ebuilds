--- sh/tmpfiles.sh.in.dist	2015-01-17 23:35:18.552632317 +0000
+++ sh/tmpfiles.sh.in	2015-01-17 23:35:58.930875695 +0000
@@ -245,7 +245,8 @@ PREFIX=
 FILE=
 fragments=
 # XXX: The harcoding of /usr/lib/ is an explicit choice by upstream
-tmpfiles_dirs='/usr/lib/tmpfiles.d/ /etc/tmpfiles.d/ /run/tmpfiles.d/'
+#tmpfiles_dirs='/usr/lib/tmpfiles.d/ /etc/tmpfiles.d/ /run/tmpfiles.d/'
+tmpfiles_dirs='/usr/lib/tmpfiles.d/ /etc/tmpfiles.d/ /var/run/tmpfiles.d/'
 tmpfiles_basenames=''
 tmpfiles_d=''
 # Build a list of sorted unique basenames
--- sh/init.sh.Linux.in.dist	2015-01-17 23:39:42.694474383 +0000
+++ sh/init.sh.Linux.in	2015-01-18 00:00:27.283662918 +0000
@@ -3,6 +3,62 @@
 # Copyright (c) 2007-2009 Roy Marples <roy@marples.name>
 # Released under the 2-clause BSD license.
 
+# This basically mounts $RC_SVCDIR as a ramdisk.
+# The tricky part is finding something our kernel supports
+# tmpfs and ramfs are easy, so force one or the other.
+svcdir_restorecon()
+{
+	local rc=0
+	if [ -x /usr/sbin/selinuxenabled -a -c /selinux/null ] &&
+	  selinuxenabled; then
+		restorecon $RC_SVCDIR
+		rc=$?
+	fi
+	return $rc
+}
+
+mount_svcdir()
+{
+	# mount from fstab if we can
+	fstabinfo --mount "$RC_SVCDIR" && return 0
+
+	local fs= fsopts="-o rw,noexec,nodev,nosuid"
+	local svcsize=${rc_svcsize:-1024}
+
+	# Some buggy kernels report tmpfs even when not present :(
+	if grep -Eq "[[:space:]]+tmpfs$" /proc/filesystems; then
+		local tmpfsopts="${fsopts},mode=755,size=${svcsize}k"
+		mount -n -t tmpfs $tmpfsopts rc-svcdir "$RC_SVCDIR"
+		if [ $? -eq 0 ]; then
+			svcdir_restorecon
+			[ $? -eq 0 ] && return 0
+		fi
+	fi
+
+	if grep -Eq "[[:space:]]+ramfs$" /proc/filesystems; then
+		fs="ramfs"
+		# ramfs has no special options
+	elif [ -e /dev/ram0 ] \
+		&& grep -Eq "[[:space:]]+ext2$" /proc/filesystems; then
+		devdir="/dev/ram0"
+		fs="ext2"
+		dd if=/dev/zero of="$devdir" bs=1k count="$svcsize"
+		mkfs -t "$fs" -i 1024 -vm0 "$devdir" "$svcsize"
+	else
+		echo
+		eerror "OpenRC requires tmpfs, ramfs or a ramdisk + ext2"
+		eerror "compiled into the kernel"
+		echo
+		return 1
+	fi
+
+	mount -n -t "$fs" $fsopts rc-svcdir "$RC_SVCDIR"
+	if [ $? -eq 0 ]; then
+		svcdir_restorecon
+		[ $? -eq 0 ] && return 0
+	fi
+}
+
 . "$RC_LIBEXECDIR"/sh/functions.sh
 [ -r "@SYSCONFDIR@/rc.conf" ] && . "@SYSCONFDIR@/rc.conf"
 
@@ -42,33 +98,70 @@ sys="$(openrc --sys)"
 if [ ! -d /run ]; then
 	if [ "$sys" = VSERVER ]; then
 		if [ -e /run ]; then
-		rm -rf /run
+			rm -rf /run
 		fi
 		mkdir /run
 	else
-		eerror "The /run directory does not exist. Unable to continue."
-		return 1
+		#eerror "The /run directory does not exist. Unable to continue."
+		#return 1
+		:
+		# awk lives in /usr...
+		if type -pf awk >/dev/null 2>&1; then
+			boot_services="$( rc-status -Ca 2>/dev/null | awk 'BEGIN { doprint = 0 } ; /^Runlevel: / { doprint = 0 ; ( "boot" == $2 || "sysinit" == $2 ) && doprint = 2 } ; ( 1 == doprint ) { print $1 } ; ( 2 == doprint ) { doprint = 1 }' )"
+		else
+			boot_services="$( rc-status -Ca 2>/dev/null | sed -r '/^Runlevel: / s/^(.*)$/Runlevel: \n\1/' | sed -nr '/^Runlevel: (sysinit|boot)/,/^(Dynamic )?Runlevel: /p' | grep -v '^Runlevel:' | sed 's/^ \+// ; s/ .*$//' )"
+		fi
+
+		if echo ${boot_services:-lvm} | grep -Eq "dmeventd|lvm|device-mapper" >/dev/null 2>&1 && [ -d /var -a ! -w /var ]; then
+			if ! mountinfo -q /var/run; then
+				ebegin "Mounting /var/run"
+				rc=0
+				if ! fstabinfo --mount /var/run; then
+					mount -t tmpfs -o mode=0755,nosuid,nodev,size=10% tmpfs /var/run
+					rc=$?
+				fi
+				if [ $rc != 0 ]; then
+					eerror "Unable to mount tmpfs on /var/run."
+				fi
+			fi
+			if ! mountinfo -q /var/lock; then
+				ebegin "Mounting /var/lock"
+				rc=0
+				if ! fstabinfo --mount /var/lock; then
+					mount -t tmpfs -o mode=0755,nosuid,nodev,size=10% tmpfs /var/lock
+					rc=$?
+					checkpath -d -m 0775 -o root:uucp /var/lock
+				fi
+				if [ $rc != 0 ]; then
+					eerror "Unable to mount tmpfs on /var/lock"
+				fi
+			fi
+		fi
 	fi
 fi
 
-if [ "$sys" = VSERVER ]; then
-	rm -rf /run/*
-elif ! mountinfo -q /run; then
-	ebegin "Mounting /run"
-	rc=0
-	if ! fstabinfo --mount /run; then
-		mount -t tmpfs -o mode=0755,nodev,size=10% tmpfs /run
-		rc=$?
-	fi
-	if [ $rc != 0 ]; then
-		eerror "Unable to mount tmpfs on /run."
-		eerror "Can't continue."
-		exit 1
+if [ -d /run ]; then
+	if [ "$sys" = VSERVER ]; then
+		rm -rf /run/*
+	elif ! mountinfo -q /run; then
+		ebegin "Mounting /run"
+		rc=0
+		if ! fstabinfo --mount /run; then
+			mount -t tmpfs -o mode=0755,nosuid,nodev,size=10% tmpfs /run
+			rc=$?
+		fi
+		if [ $rc != 0 ]; then
+			eerror "Unable to mount tmpfs on /run."
+			eerror "Can't continue."
+			exit 1
+		fi
 	fi
+	checkpath -d -m 0775 -o root:uucp /run/lock
+else
+	[ -w /var ] && checkpath -d -m 0775 -o root:uucp /var/lock
 fi
 
 checkpath -d $RC_SVCDIR
-checkpath -d -m 0775 -o root:uucp /run/lock
 
 # Try to mount xenfs as early as possible, otherwise rc_sys() will always
 # return RC_SYS_XENU and will think that we are in a domU while it's not.
@@ -80,9 +173,4 @@ if grep -Eq "[[:space:]]+xenfs$" /proc/f
 	eend $?
 fi
 
-if [ -e "$RC_LIBEXECDIR"/cache/deptree ]; then
-	cp -p "$RC_LIBEXECDIR"/cache/* "$RC_SVCDIR" 2>/dev/null
-fi
-
-echo sysinit >"$RC_SVCDIR"/softlevel
-exit 0
+. "$RC_LIBEXECDIR"/sh/init-common-post.sh
--- init.d/bootmisc.in.dist	2015-01-18 00:01:01.885490928 +0000
+++ init.d/bootmisc.in	2015-01-18 00:03:38.098695008 +0000
@@ -79,7 +79,7 @@ cleanup_var_run_dir()
 		case "$x" in
 			*.pid)
 				start-stop-daemon --test --quiet \
-				--stop --pidfile "$x" && continue
+				--stop --pidfile "$x" >/dev/null 2>&1 && continue
 			;;
 		esac
 		rm -f -- "$x"
@@ -153,11 +153,11 @@ start()
 		fi
 	done
 
-	if [ "$RC_UNAME" = Linux -a -d /run ]; then
-		migrate_to_run	/var/lock /run/lock
-		migrate_to_run	/var/run /run
-		clean_run
-	fi
+	#if [ "$RC_UNAME" = Linux -a -d /run ]; then
+	#	migrate_to_run	/var/lock /run/lock
+	#	migrate_to_run	/var/run /run
+	#	clean_run
+	#fi
 
 	if checkpath -W /var/run; then
 		ebegin "Creating user login records"
--- init.d/procfs.in.dist	2015-01-18 00:04:28.893151902 +0000
+++ init.d/procfs.in	2015-01-18 00:04:49.705579808 +0000
@@ -30,6 +30,7 @@ start()
 				local fmts
 				ebegin "Loading custom binary format handlers"
 				fmts=$(grep -hsv -e '^[#;]' -e '^[[:space:]]*$' \
+					/var/run/binfmt.d/*.conf \
 					/run/binfmt.d/*.conf \
 					/etc/binfmt.d/*.conf \
 					""/usr/lib/binfmt.d/*.conf)
--- src/librc/rc.h.in.dist	2015-01-18 00:06:11.688679871 +0000
+++ src/librc/rc.h.in	2015-01-18 00:06:16.888453658 +0000
@@ -41,9 +41,11 @@ extern "C" {
 #define RC_LIBEXECDIR           "@LIBEXECDIR@"
 #if defined(PREFIX)
 #define RC_SVCDIR               RC_LIBEXECDIR "/init.d"
+/*
 #elif defined(__linux__) || (defined(__FreeBSD_kernel__) && \
 		defined(__GLIBC__)) || defined(__GNU__)
 #define RC_SVCDIR               "/run/openrc"
+ */
 #else
 #define RC_SVCDIR               RC_LIBEXECDIR "/init.d"
 #endif
