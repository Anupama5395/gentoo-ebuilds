--- sh/init.sh.Linux.in.dist
+++ sh/init.sh.Linux.in
@@ -42,34 +98,71 @@
 if [ ! -d /run ]; then
 	if [ "$sys" = VSERVER ]; then
 		if [ -e /run ]; then
-		rm -rf /run
+			rm -rf /run
 		fi
 		mkdir /run
 	else
-		eerror "The /run directory does not exist. Unable to continue."
-		return 1
+		#eerror "The /run directory does not exist. Unable to continue."
+		#return 1
+		:
+		# awk may live in /usr...
+		if type -pf awk >/dev/null 2>&1; then
+			boot_services="$( rc-status -Ca 2>/dev/null | awk 'BEGIN { doprint = 0 } ; /^Runlevel: / { doprint = 0 ; ( "boot" == $2 || "sysinit" == $2 ) && doprint = 2 } ; ( 1 == doprint ) { print $1 } ; ( 2 == doprint ) { doprint = 1 }' )"
+		else
+			boot_services="$( rc-status -Ca 2>/dev/null | sed -r '/^Runlevel: / s/^(.*)$/Runlevel: \n\1/' | sed -nr '/^Runlevel: (sysinit|boot)/,/^(Dynamic )?Runlevel: /p' | grep -v '^Runlevel:' | sed 's/^ \+// ; s/ .*$//' )"
+		fi
+
+		if echo ${boot_services:-lvm} | grep -Eq "dmeventd|lvm|device-mapper" >/dev/null 2>&1 && [ -d /var -a ! -w /var ]; then
+			if ! mountinfo -q /var/run; then
+				ebegin "Mounting /var/run"
+				rc=0
+				if ! fstabinfo --mount /var/run; then
+					mount -t tmpfs -o mode=0755,nosuid,nodev,size=10% tmpfs /var/run
+					rc=$?
+				fi
+				if [ $rc != 0 ]; then
+					eerror "Unable to mount tmpfs on /var/run."
+				fi
+			fi
+			if ! mountinfo -q /var/lock; then
+				ebegin "Mounting /var/lock"
+				rc=0
+				if ! fstabinfo --mount /var/lock; then
+					mount -t tmpfs -o mode=0755,nosuid,nodev,size=10% tmpfs /var/lock
+					rc=$?
+					checkpath -d -m 0775 -o root:uucp /var/lock
+				fi
+				if [ $rc != 0 ]; then
+					eerror "Unable to mount tmpfs on /var/lock"
+				fi
+			fi
+		fi
 	fi
 fi
 
-if [ "$sys" = VSERVER ]; then
-	rm -rf /run/*
-elif ! mountinfo -q /run; then
-	ebegin "Mounting /run"
-	rc=0
-	if ! fstabinfo --mount /run; then
-		mount -t tmpfs -o mode=0755,nodev,size=10% tmpfs /run
-		rc=$?
-	fi
-	if [ $rc != 0 ]; then
-		eerror "Unable to mount tmpfs on /run."
-		eerror "Can't continue."
-		exit 1
+if [ -d /run ]; then
+	if [ "$sys" = VSERVER ]; then
+		rm -rf /run/*
+	elif ! mountinfo -q /run; then
+		ebegin "Mounting /run"
+		rc=0
+		if ! fstabinfo --mount /run; then
+			mount -t tmpfs -o mode=0755,nodev,size=10% tmpfs /run
+			rc=$?
+		fi
+		if [ $rc != 0 ]; then
+			eerror "Unable to mount tmpfs on /run."
+			eerror "Can't continue."
+			exit 1
+		fi
 	fi
+	checkpath -d -m 0775 -o root:uucp /run/lock
+else
+	[ -w /var ] && checkpath -d -m 0775 -o root:uucp /var/lock
 fi
 
 [ -x /sbin/restorecon ] && /sbin/restorecon -rF /run
 checkpath -d $RC_SVCDIR
-checkpath -d -m 0775 -o root:uucp /run/lock
 
 # Try to mount xenfs as early as possible, otherwise rc_sys() will always
 # return RC_SYS_XENU and will think that we are in a domU while it's not.
@@ -80,9 +173,4 @@
 	eend $?
 fi
 
-if [ -e "$RC_LIBEXECDIR"/cache/softlevel ]; then
-	cp -p "$RC_LIBEXECDIR"/cache/* "$RC_SVCDIR" 2>/dev/null
-fi
-
-echo sysinit >"$RC_SVCDIR"/softlevel
-exit 0
+. "$RC_LIBEXECDIR"/sh/init-common-post.sh
--- init.d/bootmisc.in.dist
+++ init.d/bootmisc.in
@@ -79,7 +79,7 @@
 		case "$x" in
 			*.pid)
 				start-stop-daemon --test --quiet \
-				--stop --pidfile "$x" && continue
+				--stop --pidfile "$x" >/dev/null 2>&1 && continue
 			;;
 		esac
 		rm -f -- "$x"
@@ -174,11 +174,11 @@
 		fi
 	done
 
-	if [ "$RC_UNAME" = Linux -a -d /run ]; then
-		migrate_to_run	/var/lock /run/lock
-		migrate_to_run	/var/run /run
-		clean_run
-	fi
+	#if [ "$RC_UNAME" = Linux -a -d /run ]; then
+	#	migrate_to_run	/var/lock /run/lock
+	#	migrate_to_run	/var/run /run
+	#	clean_run
+	#fi
 
 	if checkpath -W /var/run; then
 		ebegin "Creating user login records"
--- src/librc/rc.h.in.dist
+++ src/librc/rc.h.in
@@ -41,9 +41,11 @@
 #define RC_LIBEXECDIR           "@LIBEXECDIR@"
 #if defined(PREFIX)
 #define RC_SVCDIR               RC_LIBEXECDIR "/init.d"
+/*
 #elif defined(__linux__) || (defined(__FreeBSD_kernel__) && \
 		defined(__GLIBC__)) || defined(__GNU__)
 #define RC_SVCDIR               "/run/openrc"
+*/
 #else
 #define RC_SVCDIR               RC_LIBEXECDIR "/init.d"
 #endif
