#!/sbin/openrc-run
# Copyright 1999-2016 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Id: e91c5c6c9f8fea00b8a927f29c9b4de2a9a641cc $

PIDFILE="/var/run/dmeventd.pid"
BIN="/sbin/dmeventd"

depend() {
	# As of .67-r1, we call ALL lvm start/stop scripts with --sysinit, that
	# means dmeventd is NOT notified, as it cannot be safely running
	after lvm device-mapper
}

start() {
	local -i pid
	if [ -e "${PIDFILE}" ]; then
		pid=$( < "${PID}" )
		if kill -0 ${pid} >/dev/null 2>&1; then
			eerror "${svc} already appears to be running as process ${pid}"
			return 1
		else
			ewarn "Detected stale pidfile '${PID}' for defunct process ${pid} - removing"
			rm -f "${PID}" /var/run/dmeventd-{client,server} >/dev/null 2>&1
		fi
	fi

	ebegin "Starting dmeventd"
	# dmeventd aborts rapidly if left to daemonise into the background,
	# which is the default behaviour. Running it in the foreground but then
	# letting start-stop-daemon background it seems fine, though!
	start-stop-daemon --start --exec "${BIN}" --background \
		--pidfile "${PIDFILE}" -- -f
	eend $?
}

stop() {
	ebegin "Stopping dmeventd"
	start-stop-daemon --stop --exec "${BIN}" --pidfile "${PIDFILE}"
	eend $?

	if [ -e "${PIDFILE}" ]; then
		pid=$( < "${PID}" )
		if kill -0 ${pid} >/dev/null 2>&1; then
			eerror "${svc} appears to still be running as process ${pid}"
			return 1
		else
			ewarn "Detected stale pidfile '${PID}' for defunct process ${pid} - removing"
			rm -f "${PID}" /var/run/dmeventd-{client,server} >/dev/null 2>&1
		fi
	fi
}
